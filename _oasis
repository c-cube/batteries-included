OASISFormat:        0.4
OCamlVersion:       >= 3.12.1
Name:               batteries
Version:            light-alpha
Authors:            Batteries Included Team
License:            LGPL-2.1 with OCaml linking exception
LicenseFile:        LICENSE
Homepage:           http://batteries.forge.ocamlcore.org/
#BuildType:         custom (0.2)
#InstallType:       custom (0.2)
#BuildTools:        make
BuildTools:         ocamlbuild
Plugins:            META (0.3), DevFiles (0.3)
Synopsis:           Extended OCaml Standard Library
FilesAB:            src/batteriesConfig.ml.ab
PrebuildCommand:    make prefilter

AlphaFeatures: compiled_setup_ml

#XCustomBuild: $make all
#XCustomInstall: $make install
#XCustomUninstall: $make uninstall

Flag "num"
  Description:  Build and install arbitrary precision numbers
  Default:      true

Flag "thread"
  Description:  Build and install threading facilities
  Default:      true

Flag "unix"
  Description:  Build and install unix compatibility layer
  Default:      true

Flag "bigarray"
  Description:  Build and install Bigarray interface
  Default:      true

Flag "sexp"
  Description:  Build and install the interface to Sexplib (requires Sexplib)
  Default:      false

Flag "yojson"
  Description:  Build and install the interface to Yojson (requires Yojson)
  Default:      false

Flag "bencode"
  Description:  Build and install the interface to Bencode (requires Bencode)
  Default:      false

Library "batteries_core"
  Path:             src
  FindlibName:      core
  FindlibParent:    batteries
  Modules:          BatArray, BatBool, BatBounded, BatBuffer, BatChar,
                    BatComplex, BatFloat, BatFormat, BatGc, BatHashtbl,
                    BatHeap, BatInt32, BatInt64, BatInt, BatList, BatMap,
                    BatMarshal, BatNativeint, BatOo, BatPrintexc, BatPrintf,
                    BatBitSet, BatQueue, BatRandom, BatSet, BatStack,
                    BatString, BatSys, BatUnit, BatGlobal, BatInterfaces,
                    BatNumber, BatOption, BatOrd, BatRef, BatResult,
                    BatConcurrent, BatReturn, BatTuple, BatAvlTree,
                    BatInnerWeaktbl, BatSeq, BatLazyList, BatStream, BatISet,
                    BatIMap, BatDllist, BatDynArray, BatMultiPMap, BatMultiMap,
                    BatRefList, BatUref, BatVect, BatCache, BatFingerTree,
                    BatDeque, BatSplay, BatHashcons, BatUChar, BatUTF8,
                    BatText, BatDigest, BatBase64, BatCharParser, BatScanf,
                    BatParserCo, BatSubstring, BatLexing, BatGenlex,
                    BatPathGen, BatIO, BatInnerIO, BatOptParse, BatGen, BatFun,
                    BatConv

Library "batteries_bigarray"
  Path:             src/bigarray/
  Modules:          BatBigarray
  Build$:           flag(bigarray)
  FindlibName:      bigarray
  FindlibParent:    batteries
  BuildDepends:     batteries.core,bigarray

Library "batteries_unix"
  Path:             src/unix
  Modules:          BatUnix, BatLogger, BatLog, BatFile
  Build$:           flag(unix)
  FindlibName:      unix
  FindlibParent:    batteries
  BuildDepends:     batteries.core,batteries.bigarray,unix

Library "batteries_num"
  Path:             src/num
  Modules:          BatNum, BatBig_int
  Build$:           flag(num)
  FindlibName:      num
  FindlibParent:    batteries
  BuildDepends:     batteries.core,num

Library "batteries_thread"
  Path:             src/thread
  Modules:          BatRMutex, BatMutex
  Build$:           flag(thread)
  FindlibName:      thread
  FindlibParent:    batteries
  BuildDepends:     batteries.core,threads

Library "batteries"
  Path:             src/full
  Modules:          BatPervasives, BatInnerPervasives, Batteries,
                    BatteriesExceptionless
  Build$:           flag(unix) && flag(bigarray)
  BuildDepends:     batteries.core,batteries.bigarray,batteries.unix,num,str

Library "batteries_sexp"
  Path:             src/sexp
  Modules:          BatSexp
  Build$:           flag(sexp)
  FindlibName:      sexp
  FindlibParent:    batteries
  BuildDepends:     batteries.core,sexplib

Library "batteries_yojson"
  Path:             src/yojson
  Modules:          BatYojson
  Build$:           flag(yojson)
  FindlibName:      yojson
  FindlibParent:    batteries
  BuildDepends:     batteries.core,yojson

Library "batteries_bencode"
  Path:             src/bencode
  Modules:          BatBencode
  Build$:           flag(bencode)
  FindlibName:      bencode
  FindlibParent:    batteries
  BuildDepends:     batteries.core,bencode

Document manual
  Type:                 ocamlbuild (0.3)
  Title:                Ocaml Batteries Documentation
  BuildTools:           ocamldoc
  XOCamlbuildPath:      .
  XOCamlbuildLibraries: batteries.core,batteries.unix,batteries,
                        batteries.bigarray,batteries.bencode,batteries.num,
                        batteries.thread,batteries.yojson,batteries.sexp

Test main
  Type:         custom (0.2)
  Command:      make test-native

SourceRepository master
  Type:         git
  Location:     git://github.com/ocaml-batteries-team/batteries-included.git
  Branch:       master
  Browser:      https://github.com/ocaml-batteries-team/batteries-included
